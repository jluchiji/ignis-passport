{"version":3,"sources":["strategy.js"],"names":[],"mappings":";;;;;;;;;;;;qBAkBwB,QAAQ;;;;;wBAXR,UAAU;;;;yBACN,YAAY;;;;;;;;;;;AAUzB,SAAS,QAAQ,CAAC,IAAI,EAAE;AACrC,SAAO,UAAS,QAAQ,EAAE;AACxB,QAAI,OAAO,GAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,QAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,aAAO,GAAI,SAAS,CAAC,CAAC,CAAC,CAAC;AACxB,cAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;KACzB;;AAED,QAAI,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,4BAAY,QAAQ,CAAC,CAAC,CAAC;AACtD,0BAAS,GAAG,CAAC,MAAM,CAAC,CAAC;GACtB,CAAC;CACH","file":"strategy.js","sourcesContent":["/**\n * auth/strategy.js\n *\n * @author  Denis Luchkin-Zhou <denis@ricepo.com>\n * @license MIT\n */\n\nimport Passport    from 'passport';\nimport { unpromisify } from 'ignis-util';\n\n/**\n * strategy(1)\n *\n * @description                Creates a passport.js strategy that supports\n *                             promise-returning callbacks.\n * @param          {ctor}      Passport.js strategy constructor.\n * @returns        {Strategy}  Passport.js strategy.\n */\nexport default function strategy(ctor) {\n  return function(callback) {\n    let options  = Object.create(null);\n    if (arguments.length === 2) {\n      options  = arguments[0];\n      callback = arguments[1];\n    }\n\n    let result = new ctor(options, unpromisify(callback));\n    Passport.use(result);\n  };\n}\n"],"sourceRoot":"/source/"}